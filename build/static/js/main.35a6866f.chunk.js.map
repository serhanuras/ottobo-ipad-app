{"version":3,"sources":["Images/ottobo.png","Components/Header.js","Components/Bottom.js","Components/Order.js","Components/Scanner.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","Navbar","fixed","style","width","padding","margin","backgroundColor","Row","className","Col","xs","src","logo","alt","Bottom","Button","variant","size","block","Order","marginTop","textAlign","fontSize","fontWeight","height","backgroundImage","paddingTop","color","Scanner","id","console","log","this","props","Quagga","init","inputStream","type","constraints","facing","locator","patchSize","halfSample","numOfWorkers","decoder","readers","locate","err","start","onDetected","offDetected","Component","App","_onDetected","result","window","innerWidth","innerHeight","Helmet","charSet","http-equiv","content","Container","fluid","Alert","marginRight","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.35a6866f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ottobo.7350e08c.png\";","import React from 'react';\nimport { Row, Col, Navbar } from 'react-bootstrap';\nimport '../App.css';\nimport { FaRegUserCircle } from 'react-icons/fa';\nimport { FiMonitor } from 'react-icons/fi';\nimport logo from '../Images/ottobo.png'\n\nfunction Header() {\n    return (\n        <Navbar fixed=\"top\" style={{ width: \"100%\", padding: \"0px\", margin: '0px', backgroundColor: \"#f7f7f7\" }} >\n        <Row className=\"Header-row\">\n            <Col className=\"col1\">\n                <FiMonitor />\n            </Col>\n            <Col xs={7}>\n                <div className=\"col2\">\n                    <img src={logo} alt=\"Logo\" className=\"logo\" />\n                </div>\n            </Col>\n            <Col className=\"col3\">\n                <div> <FaRegUserCircle/></div>\n                <div>Mustafa Serhan Uras</div>\n            </Col>\n        </Row>\n        </Navbar>\n    );\n}\n\nexport default Header;\n","import React from 'react';\nimport { Navbar, Button } from 'react-bootstrap';\nimport '../App.css';\n\n\nfunction Bottom() {\n    return (\n        <Navbar fixed=\"bottom\" className=\"bottom\" >\n            <Button variant=\"success\" size=\"lg\" block className=\"button\">\n                CONFIRM PICKING\n        </Button>\n        </Navbar>\n\n    );\n}\n\nexport default Bottom;\n","import React from 'react';\nimport { Row, Col, Button } from 'react-bootstrap';\nimport '../App.css';\nimport { GiPaperTray } from 'react-icons/gi';\n\n\nfunction Order() {\n    return (\n        <Row className=\"order\">\n            \n            <Col className=\"numbers\">\n                <Row>\n                    <Col > Quantity </Col>\n                </Row>\n                <Row  style={{marginTop:\"20px\"}}>\n                    <Col> \n                        <Row>\n                            <Col className=\"quantity\">\n                                3\n                            </Col>\n                            <Col style={{textAlign:\"left\"}}>\n                                <Button variant=\"primary\" className=\"quantitybutton\">+</Button> <br/>\n                                <Button variant=\"primary\" className=\"quantitybutton\">-</Button>\n                            </Col>\n                        </Row>\n                        <Row style={{marginTop:\"40px\"}}>\n                            <Col > Picked </Col>\n                        </Row>\n                        <Row>\n                            <Col style={{fontSize:\"40px\", fontWeight:\"600\"}}>\n                               0\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n            </Col>\n            <Col xs={6} style={{ height: \"100%\" }}>\n                <div className=\"productImage\" style={{backgroundImage: \"url('https://productimages.hepsiburada.net/s/25/551/10120914501682.jpg')\"}}>  </div>\n            </Col>\n            <Col  className=\"cart\">\n                <Row style={{paddingTop:\"2px\"}}>\n                    <Col>\n                        <div className=\"item\">\n                        <GiPaperTray/>\n                            <span className=\"itemLabel\">1</span>\n                        </div>\n                    </Col>\n                </Row>\n                <Row style={{paddingTop:\"2px\", color:\"white\"}}>\n                    <Col>\n                        <div className=\"item\" style={{backgroundColor:\"#007bff\"}}>\n                        <GiPaperTray/>\n                            <span className=\"itemLabel\">2</span>\n                        </div>\n                    </Col>\n                </Row>\n                <Row style={{paddingTop:\"2px\"}}>\n                    <Col>\n                        <div className=\"item\">\n                        <GiPaperTray/>\n                            <span className=\"itemLabel\">3</span>\n                        </div>\n                    </Col>\n                </Row>\n            </Col>\n        </Row>\n\n    );\n}\n\nexport default Order;\n","import React,{ Component} from 'react';\nimport Quagga from 'quagga';\n\nclass Scanner extends Component {\n   \n    render() {\n        return (\n            <div id=\"interactive\" className=\"viewport\"/>\n        );\n    }\n\n    componentDidMount() {\n        console.log(this.props.width)\n        console.log(this.props.height)\n        Quagga.init({\n            inputStream: {\n                type : \"LiveStream\",\n                constraints: {\n                    width: this.props.width,\n                    height: this.props.height,\n                    facing: \"environment\" // or user\n                }\n            },\n            locator: {\n                patchSize: \"medium\",\n                halfSample: true\n            },\n            numOfWorkers: 4,\n            decoder: {\n                readers : [ \"code_128_reader\", \"ean_reader\", \"ean_8_reader\", \"code_39_reader\",\"code_39_vin_reader\",\"codabar_reader\",\"upc_reader\",\"upc_e_reader\",\"i2of5_reader\",\"2of5_reader\",\"code_93_reader\"]\n            },\n            locate: true\n        }, function(err) {\n            if (err) {\n                return console.log(err);\n            }\n            Quagga.start();\n        });\n        Quagga.onDetected(this.props.onDetected);\n    }\n\n    componentWillUnmount() {\n        Quagga.offDetected(this.props.onDetected);\n    }\n\n    // _onDetected(result) {\n    //     //console.log(result);\n    //     console.log(this.props)\n        \n    // }\n};\n\nexport default Scanner;","import React, { Component } from 'react';\nimport { Container, Row, Col, Alert } from 'react-bootstrap';\nimport './App.css';\nimport Header from './Components/Header';\nimport Bottom from './Components/Bottom';\nimport Order from './Components/Order';\nimport { Helmet } from \"react-helmet\";\nimport { FaBarcode } from 'react-icons/fa';\nimport { AiOutlineBarcode } from 'react-icons/ai';\nimport Scanner from './Components/Scanner';\n\nclass App extends Component {\n\n  _onDetected = (result) => {\n    console.log(result);\n  }\n\n  render() {\n\n    let { innerWidth: width, innerHeight: height } = window;\n\n\n\n    if (width === 1024) {\n      width = 480;\n      height = 320;\n    }\n    else {\n      width = 360;\n      height = 240;\n    }\n\n    console.log('AAA', width, height);\n    return (\n      <div className=\"App\">\n        <Helmet>\n          <meta charSet=\"utf-8\" />\n          <title>Ottobo</title>\n          <meta http-equiv=\"ScreenOrientation\" content=\"autoRotate:disabled\"></meta>\n        </Helmet>\n        <Container fluid>\n\n          <Header />\n\n          <Order />\n\n          <Row >\n            <Col> </Col>\n            <Col xs={6}>\n              <Alert variant=\"primary\" style={{ fontSize: \"25px\", fontWeight: \"600\" }}>\n                <FaBarcode style={{ fontSize: \"40px\", marginRight: \"15px\" }} /> 2A - 003 - 167\n          </Alert>\n            </Col>\n            <Col> </Col>\n          </Row>\n          <Row style={{ paddingTop: \"50px\", height: height }}>\n            <Col> </Col>\n            <Col xs={6}>\n\n              <Scanner onDetected={this._onDetected} width={width} height={height} style={{ textAlign: \"center\" }} />\n\n            </Col>\n            <Col> </Col>\n          </Row>\n          <Row style={{ paddingTop: \"50px\", height: height }}>\n            <Col> </Col>\n            <Col xs={6}>\n              <FaBarcode style={{ fontSize: height/4 }} />\n            </Col>\n            <Col> </Col>\n          </Row>\n          <Bottom />\n\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}